Интерфейс Iterator
Iterator дословно - это переборщик, то есть некоторая сущность которая перебирает все элементы коллекции. В java самый распространённый пример, где используется итератор это коллекция List.

Методы:
boolean hasNext
Если мы находимся в процессе итерации и мы еще не дошли до конца списка, то метод обязан нам возвращать true, если это был последний элемент в коллекции то метод должен возвращать false.
< t > Next
Метод Next возвращает следующий элемент коллекции.Его необходимо использовать в совокупности с методом hasNext
void remove
Удаляет последний элемент полученным методом(элемент который находится на индексе counter)
Задача 1 - Iterator
Создать класс Студент(Класс с информации о студенте м его номере,).

Создать класс УчебнаяГруппа(Класс с информацией о группе студентов,).

Создать класс УчебнаяГруппаИтератор, заставив его реализовать. Интерфейс Iterator(Класс в котором реализовывали Iterator и методы, они указаны выше).

Реализовать его контракты(методы), включая удаление.


Интерфейс Iterable
Данный интерфейс должны реализовывать все коллекции которые поддерживают Iterator. У него есть всего один метод:

Iterator iterator() - возвращает Iterator который мы реализовывали в предыдущей задаче.

Comparator
Интерфейс Java Comparator используется для упорядочивания объектов внутри определенного пользователем класса. Этот интерфейс доступен в пакете java.util и включает в себя два важных метода, известных как сравнение (O o,O x) и equals (Элемент Object).

Всего один метод: int compare(O o,O x) -

Comparable
Как следует из названия, Comparable – это интерфейс, который определяет способ сравнения объекта с другими объектами того же типа. Это помогает сортировать объекты, которые имеют тенденцию сортировать себя, т.е. объекты должны знать, как упорядочить себя.

Всего один метод: int compareTo(O o) -

Задача 3 - Comparable

Модифицировать класс Студент, заставив его реализовать интерфейс Comparable
Реализовать контракт compareTo () со сравнением по какому-либо параметру (пример studentId)
Модифицировать класс УчебнаяГруппаСервис, добавив в него метод сортировки списка студентов по id
Модифицировать класс Контроллер, добавив в него метод сортировки списка студентов по id и вызывать в нем созданный метод из УчебнаяГруппаСервис